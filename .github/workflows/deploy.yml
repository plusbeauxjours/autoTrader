name: 🚀 Auto Deploy Bot to Azure VM

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v3

      - name: 📨 Validate Slack Webhook
        run: |
          echo ">>> Slack webhook 검증 시작"
          if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "❌ SLACK_WEBHOOK_URL 환경 변수가 설정되지 않았습니다!"
            exit 1
          fi

          STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -X POST \
            -H 'Content-type: application/json' \
            --data '{"text":"🚧 GitHub Actions: Slack 웹훅 검증 테스트"}' \
            "${{ secrets.SLACK_WEBHOOK_URL }}")
            
          echo "Slack webhook response status: $STATUS"
          if [ "$STATUS" -ne 200 ]; then
            echo "❌ Slack webhook 테스트 실패! 응답 코드: $STATUS"
            exit 1
          fi
          echo "✅ Slack webhook 검증 완료"

      - name: 🔐 Set up SSH access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H 4.230.11.18 >> ~/.ssh/known_hosts

      - name: 📦 Sync code to Azure VM
        run: |
          rsync -avz --exclude '.git' ./ azureuser@4.230.11.18:/home/azureuser/AutoBot

      - name: 📄 Write .env file to Azure VM
        run: |
          ssh azureuser@4.230.11.18 "cat > /home/azureuser/AutoBot/.env <<'EOT'
          SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }}
          BINANCE_API_KEY=${{ secrets.BINANCE_API_KEY }}
          BINANCE_API_SECRET=${{ secrets.BINANCE_API_SECRET }}
          TWITTER_BEARER_TOKEN=${{ secrets.TWITTER_BEARER_TOKEN }}
          EOT"

          # 환경 변수 파일 권한 및 내용 확인
          ssh azureuser@4.230.11.18 "
            chmod 600 /home/azureuser/AutoBot/.env &&
            echo '>>> .env 파일 확인:' &&
            cat /home/azureuser/AutoBot/.env | grep -v SECRET | grep -v KEY
          "

      - name: 📦 Set up Python and install dependencies
        run: |
          ssh azureuser@4.230.11.18 "
            cd /home/azureuser/AutoBot &&
            python3 -m venv venv &&
            source venv/bin/activate &&
            pip install --upgrade pip &&
            pip install -r requirements.txt
          "

      - name: ✅ Verify TA-Lib (via `ta` package)
        run: |
          ssh azureuser@4.230.11.18 "
            source /home/azureuser/AutoBot/venv/bin/activate &&
            python -c 'import ta; print(\"✅ Technical Analysis library installed successfully\")'
          "

      - name: 🔁 Restart Bot
        run: |
          ssh azureuser@4.230.11.18 "
            pkill -f main.py || true &&
            cd /home/azureuser/AutoBot &&
            source venv/bin/activate &&
            nohup venv/bin/python3 main.py > bot.log 2>&1 &
          "

      - name: 🔍 Check if Bot is Running
        run: |
          ssh azureuser@4.230.11.18 "
            pgrep -f main.py || (echo '❌ Bot not running' && exit 1)
          "

      - name: ⏲️ Wait for bot initialization
        run: sleep 10

      - name: 🐛 Dump bot.log
        run: |
          ssh azureuser@4.230.11.18 "
            echo '>>> 최신 봇 로그:' &&
            tail -n 30 /home/azureuser/AutoBot/bot.log || echo 'no bot.log found'
          "

      - name: 🎉 Done!
        run: echo "🎯 Bot deployed and running live on Azure VM! 🚀"
